{"version":3,"sources":["webpack:///webpack/bootstrap 842e29ee50f2c768820c?9ee0","webpack:///./src/service-worker.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACrCA,MAAK,gBAAL,CAAsB,SAAtB,EAAiC,UAAS,KAAT,EAAgB;;;;;;;;;;;;EAAhB,CAAjC;;;AAeA,MAAK,gBAAL,CAAsB,UAAtB,EAAkC,cAAM,EAAN,CAAlC;;;AAIA,MAAK,gBAAL,CAAsB,OAAtB,EAA+B,cAAM;AACjC,aAAQ,GAAR,CAAY,OAAZ,EADiC;AAEjC,QAAG,WAAH,CAAe,IAAI,QAAJ,CAAa,SAAb,EAAwB;AACnC,kBAAS,EAAE,gBAAgB,YAAhB,EAAX;MADW,CAAf;;AAFiC,EAAN,CAA/B,C","file":"service-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 842e29ee50f2c768820c\n **/","// installing状态时触发, 可使用event.waitUtil block install过程\nself.addEventListener('install', function(event) {\n    // event.waitUntil(\n        // caches.open(CURRENT_CACHES['prefetch']).then(function(cache) {\n        //     cache.addAll(urlsToPrefetch.map(function(urlToPrefetch) {\n        //         return new Request(urlToPrefetch, {mode: 'no-cors'});\n        //     })).then(function() {\n        //         console.log('All resources have been fetched and cached.');\n        //     })\n        // }).catch(function(error) {\n        //     console.error('Pre-fetching failed:', error);\n        // })\n    // );\n});\n\n// service worker在activated之前触发\nself.addEventListener('activate', ev => {\n});\n\n// 客户端请求service worker控制的域名时触发\nself.addEventListener('fetch', ev => {\n    console.log('fetch');\n    ev.respondWith(new Response('gotach!', {\n        headers: { 'Content-Type': 'text/plain' }              \n    }));\n    // return fetch(ev.request);\n});\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/service-worker.js\n **/"],"sourceRoot":""}